{
    "$schema": "http://json-schema.org/draft-07/schema",
    "default": {},
    "oneOf": [
        {
            "$ref": "#/definitions/filter"
        },
        {
            "$ref": "#/definitions/filterArray"
        },
        {
            "type": "object",
            "properties": {
                "all_of": {
                    "$ref": "#/definitions/filterArray"
                }
            },
            "required": [
                "all_of"
            ],
            "not": {
                "required": [
                    "value",
                    "operator",
                    "test",
                    "subject"
                ]
            }
        },
        {
            "type": "object",
            "properties": {
                "any_of": {
                    "$ref": "#/definitions/filterArray"
                }
            },
            "required": [
                "any_of"
            ],
            "not": {
                "required": [
                    "value",
                    "operator",
                    "test",
                    "subject"
                ]
            }
        },
        {
            "type": "object",
            "properties": {
                "none_of": {
                    "$ref": "#/definitions/filterArray"
                }
            },
            "required": [
                "none_of"
            ],
            "not": {
                "required": [
                    "value",
                    "operator",
                    "test",
                    "subject"
                ]
            }
        }
    ],
    "definitions": {
        "subject": {
            "type": "string",
            "enum": [
                "block",
                "damager",
                "other",
                "parent",
                "player",
                "self",
                "target"
            ]
        },
        "operator": {
            "type": "boolean",
            "enum": [
                "!=",
                "<",
                "<=",
                "<>",
                "=",
                "==",
                ">",
                ">=",
                "equals",
                "not"
            ]
        },
        "filterArray": {
            "type": "array",
            "items": {
                "type": "object",
                "$ref": "#/definitions/filter"
            }
        },
        "filter": {
            "type": "object",
            "oneOf": [
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "clock_time allows a creator to compare the current time with a float value in the range (0.0, 1.0).",
                            "const": "clock_time"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "number",
                            "description": "(Required) A floating point value.",
                            "minimum": 0.0,
                            "maximum": 1.0,
                            "anyOf": [
                                {
                                    "enum": [
                                        // Noon
                                        0.0,
                                        // Sunset
                                        0.25,
                                        //Midnight
                                        0.5,
                                        //Sunrise
                                        0.75
                                    ]
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "distance_to_nearest_player compares the distance to the nearest Player with a float value.",
                            "const": "distance_to_nearest_player"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "number",
                            "description": "(Required) A floating point value."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity has the named ability.",
                            "const": "has_ability"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "The Ability type to test. The following abilities are usable to test for:",
                            "enum": [
                                "flyspeed",
                                "flying",
                                "instabuild",
                                "invulnerable",
                                "lightning",
                                "mayfly",
                                "mute",
                                "noclip",
                                "walkspeed",
                                "worldbuilder"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the biome the subject is in has the specified tag.",
                            "const": "has_biome_tag"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The tag to look for",
                            "$ref": "../constants/biome_tags.schema.json"
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity contains the named component.",
                            "const": "has_component"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The component name to look for"
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject Player entity has opened a container.",
                            "const": "has_container_open"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity receives the named damage type.",
                            "const": "has_damage"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "The Damage type to test",
                            "enum": [
                                "anvil",
                                "attack",
                                "block_explosion",
                                "contact",
                                "drowning",
                                "entity_explosion",
                                "fall",
                                "falling_block",
                                "fatal",
                                "fire",
                                "fire_tick",
                                "fly_into_wall",
                                "lava",
                                "magic",
                                "none",
                                "override",
                                "piston",
                                "projectile",
                                "stalactite",
                                "stalagmite",
                                "starve",
                                "suffocation",
                                "suicide",
                                "thorns",
                                "void",
                                "wither"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests for the presence of a named item in the designated slot of the subject entity.",
                            "const": "has_equipment"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The item name to look for"
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the Subject has the specified mob effect.",
                            "const": "has_mob_effect"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Optional) A string value.",
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "../constants/effects.schema.json"
                                }
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is holding a ranged weapon like a bow or crossbow.",
                            "const": "has_ranged_weapon"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity has the tag provided.",
                            "const": "has_tag"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity has a valid target.",
                            "const": "has_target"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the target has any trade supply left. Will return false if the target cannot be traded with.",
                            "const": "has_trade_supply"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Compares the current 24 hour time with an int value in the range[0, 24000]",
                            "const": "hourly_clock_time"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) An integer value set between 0 and 24000",
                            "minimum": 0,
                            "maximum": 24000
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is in a caravan.",
                            "const": "in_caravan"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is in the clouds.",
                            "const": "in_clouds"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is in lava.",
                            "const": "in_lava"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is in Nether.",
                            "const": "in_nether"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is in water or rain.",
                            "const": "in_water_or_rain"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is in water.",
                            "const": "in_water"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests if the entity was inactive for specified duration.",
                            "const": "inactivity_timer"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) An integer value."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests the current altitude against a provided value.",
                            "const": "is_altitude"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) The altitude value to compare with."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is fleeing from other mobs.",
                            "const": "is_avoiding_mobs"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the Subject is currently in the named biome.",
                            "const": "is_biome"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "$ref": "../constants/biomes.schema.json",
                            "description": "(Required) The Biome type to test"
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the block has the given name.",
                            "const": "is_block"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "$ref": "../constants/blocks.schema.json",
                            "description": "(Required) Name of the block to look for."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests the current brightness against a provided value in the range (0.0, 1.0).",
                            "const": "is_brightness"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "number",
                            "description": "(Required) The brightness value to compare with.",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is climbing.",
                            "const": "is_climbing"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is of the named color.",
                            "const": "is_color"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The Palette Color to test",
                            "enum": [
                                "black",
                                "blue",
                                "brown",
                                "cyan",
                                "gray",
                                "green",
                                "light_blue",
                                "light_green",
                                "magenta",
                                "orange",
                                "pink",
                                "purple",
                                "red",
                                "silver",
                                "white",
                                "yellow"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true during the daylight hours.",
                            "const": "is_daytime"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests the current difficulty level of the game.",
                            "const": "is_difficulty"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The game's difficulty level to test",
                            "enum": [
                                "easy",
                                "hard",
                                "normal",
                                "peaceful"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is a member of the named family.",
                            "const": "is_family"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The Family name to look for"
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether a named game rule is active.",
                            "const": "is_game_rule"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The Game Rule to test"
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the subject is in an area with humidity.",
                            "const": "is_humid"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is immobile. An entity is immobile if it lacks AI goals, has just changed dimensions or if it is a mob and has no health.",
                            "const": "is_immobile"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the Subject is inside the bounds of a village.",
                            "const": "is_in_village"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is leashed.",
                            "const": "is_leashed"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity leashed to the calling entity.",
                            "const": "is_leashed_to"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is the mark variant number provided.",
                            "const": "is_mark_variant"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) An integer value."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is moving.",
                            "const": "is_moving"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is the owner of the calling entity.",
                            "const": "is_owner"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests if the subject's persistence matches the bool value passed in.",
                            "const": "is_persistent"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is riding on another entity.",
                            "const": "is_riding"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity uses the skin id number provided.",
                            "const": "is_skin_id"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required)  An integer value."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the Subject is sleeping.",
                            "const": "is_sleeping"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the subject is sneaking.",
                            "const": "is_sneaking"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the subject is in an area covered by snow.",
                            "const": "is_snow_covered"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is the target of the calling entity.",
                            "const": "is_target"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests whether the current temperature is a given type.",
                            "const": "is_temperature_type"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The Biome temperature category to test.",
                            "enum": [
                                "cold",
                                "mild",
                                "ocean",
                                "warm"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests the current temperature against a provided value in the range (0.0, 1.0) where 0.0 is the coldest temp and 1.0 is the hottest.",
                            "const": "is_temperature_value"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "number",
                            "description": "(Required) The Biome temperature value to compare with.",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is underground. An entity is considered underground if there are non-solid blocks above it.",
                            "const": "is_underground"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is under water.",
                            "const": "is_underwater"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is the variant number provided.",
                            "const": "is_variant"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) An integer value."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject entity is visible.",
                            "const": "is_visible"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests if the entity is outside of the specified light level range. The range is set between 0 and 16.",
                            "const": "light_level"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) An integer value.",
                            "minimum": 0,
                            "maximum": 16
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Compares the current moon intensity with a float value in the range of 0.0 and 1.0",
                            "const": "moon_intensity"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "number",
                            "description": "(Required) A floating point value.",
                            "minimum": 0,
                            "maximum": 1
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Compares the current moon intensity with an Integer value in the range of 0 to 7.",
                            "const": "moon_phase"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) A integer value.",
                            "minimum": 0,
                            "maximum": 7
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is on the ground.",
                            "const": "on_ground"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true when the subject entity is on a ladder.",
                            "const": "on_ladder"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the random chance rolls 0 out of a specified max range.",
                            "const": "random_chance"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) An integer value."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns the number of riders on this entity.",
                            "const": "rider_count"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "integer",
                            "description": "(Required) An integer value."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests if the subject is a surface mob.",
                            "const": "surface_mob"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Returns true if the subject is trusted by entity.",
                            "const": "trusts"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "boolean",
                            "description": "(Optional) true or false."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests the current weather, at the actor's position, against a provided weather value.",
                            "const": "weather_at_position"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The Family name to look for."
                        }
                    }
                },
                {
                    "required": [
                        "value",
                        "test"
                    ],
                    "properties": {
                        "test": {
                            "description": "Tests for the current weather state the entity is experiencing.",
                            "const": "weather"
                        },
                        "operator": {
                            "$ref": "#/definitions/operator"
                        },
                        "subject": {
                            "$ref": "#/definitions/subject"
                        },
                        "value": {
                            "type": "string",
                            "description": "(Required) The Family name to look for."
                        }
                    }
                }
            ]
        }
    }
}